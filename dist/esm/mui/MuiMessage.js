import { Avatar, Box, Grow, Typography } from '@material-ui/core';
import React from 'react';
export function MuiMessage({
  id,
  message,
  showDateTime
}) {
  if (message.deletedAt) {
    return /*#__PURE__*/React.createElement("div", {
      id: id
    });
  }

  const dispDate = message.updatedAt ? message.updatedAt : message.createdAt;
  const ChatAvator = /*#__PURE__*/React.createElement(Box, {
    minWidth: 0,
    flexShrink: 0,
    ml: message.self ? 1 : 0,
    mr: message.self ? 0 : 1
  }, /*#__PURE__*/React.createElement(Avatar, {
    alt: message.username,
    src: message.avatar
  }));
  const ChatUsername = /*#__PURE__*/React.createElement(Box, {
    maxWidth: "100%",
    mx: 1
  }, /*#__PURE__*/React.createElement(Typography, {
    variant: "body2",
    align: message.self ? 'right' : 'left'
  }, message.username));
  const ChatDate = /*#__PURE__*/React.createElement(Box, {
    maxWidth: "100%",
    mx: 1
  }, /*#__PURE__*/React.createElement(Typography, {
    variant: "body2",
    align: message.self ? 'right' : 'left',
    color: "textSecondary"
  }, dispDate === null || dispDate === void 0 ? void 0 : dispDate.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit'
  })));
  return /*#__PURE__*/React.createElement(Grow, {
    in: true
  }, /*#__PURE__*/React.createElement(Box, {
    id: id,
    maxWidth: "100%",
    flex: "0 1 auto",
    my: 1,
    pl: message.self ? '20%' : 0,
    pr: message.self ? 0 : '20%',
    display: "flex",
    justifyContent: message.self ? 'flex-end' : 'flex-start',
    style: {
      overflowWrap: 'break-word'
    }
  }, message.avatar && !message.self && ChatAvator, /*#__PURE__*/React.createElement(Box, {
    minWidth: 0,
    display: "flex",
    flexDirection: "column"
  }, message.username && ChatUsername, /*#__PURE__*/React.createElement(Box, {
    maxWidth: "100%",
    py: 1,
    px: 2,
    bgcolor: message.self ? 'primary.main' : 'background.paper',
    color: message.self ? 'primary.contrastText' : 'text.primary',
    borderRadius: 16,
    boxShadow: 2
  }, message.type === 'text' && /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '0 1 0%',
      display: 'flex',
      flexDirection: 'row',
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement(Typography, {
    variant: "body1",
    style: {
      overflowWrap: 'break-word',
      whiteSpace: 'pre-wrap',
      display: 'flex',
      alignItems: 'center',
      maxWidth: '510px'
    }
  }, message.content), message.buttons), message.type === 'jsx' && /*#__PURE__*/React.createElement("div", null, message.content)), showDateTime && ChatDate), message.avatar && message.self && ChatAvator));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
